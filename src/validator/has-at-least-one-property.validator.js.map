{"version":3,"file":"has-at-least-one-property.validator.js","sourceRoot":"","sources":["has-at-least-one-property.validator.ts"],"names":[],"mappings":";;;;;;AAEA,OAAO,EAAE,mBAAmB,EAAE,MAAM,iBAAiB,CAAC;AAI/C,IAAM,qBAAqB,GAA3B,MAAM,qBAAqB;IACjC,cAAc;QACb,OAAO,wCAAwC,CAAC;IACjD,CAAC;IAED,QAAQ,CAAC,MAAe,EAAE,UAA+B;QACxD,OAAO,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;IAClD,CAAC;CACD,CAAA;AARY,qBAAqB;IADjC,mBAAmB,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,2BAA2B,EAAE,CAAC;GAC5D,qBAAqB,CAQjC","sourcesContent":["import type { ValidationArguments, ValidatorConstraintInterface } from \"class-validator\";\n\nimport { ValidatorConstraint } from \"class-validator\";\n\n// eslint-disable-next-line @elsikora/typescript/naming-convention\n@ValidatorConstraint({ async: false, name: \"has-at-least-one-property\" })\nexport class HasAtLeastOneProperty implements ValidatorConstraintInterface {\n\tdefaultMessage(): string {\n\t\treturn \"at least one property must be provided\";\n\t}\n\n\tvalidate(_value: unknown, properties: ValidationArguments): boolean {\n\t\treturn Object.keys(properties.object).length > 0;\n\t}\n}\n"]}