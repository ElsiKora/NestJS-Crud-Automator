{"version":3,"file":"get-primary-column.utility.js","sourceRoot":"","sources":["get-primary-column.utility.ts"],"names":[],"mappings":"AAIA,MAAM,UAAU,6BAA6B,CAAI,UAAuC,EAAE,cAA6B;IACtH,MAAM,gBAAgB,GAAoC,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,MAA2B,EAAiC,EAAE,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;IAExK,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACvB,OAAO,SAAS,CAAC;IAClB,CAAC;IAED,OAAO;QACN,GAAG,EAAE,gBAAgB,CAAC,IAAI;QAC1B,KAAK,EAAE,UAAU,CAAC,gBAAgB,CAAC,IAA4B,CAAW;KAC1E,CAAC;AACH,CAAC","sourcesContent":["import type { DeepPartial } from \"typeorm\";\n\nimport type { IApiControllerPrimaryColumn, IApiEntity, IApiEntityColumn } from \"../../../interface\";\n\nexport function ApiControllerGetPrimaryColumn<E>(parameters: DeepPartial<E> | Partial<E>, entityMetadata: IApiEntity<E>): IApiControllerPrimaryColumn<E> | undefined {\n\tconst primaryKeyColumn: IApiEntityColumn<E> | undefined = entityMetadata.columns.find((column: IApiEntityColumn<E>): column is IApiEntityColumn<E> => column.isPrimary);\n\n\tif (!primaryKeyColumn) {\n\t\treturn undefined;\n\t}\n\n\treturn {\n\t\tkey: primaryKeyColumn.name,\n\t\tvalue: parameters[primaryKeyColumn.name as keyof DeepPartial<E>] as string,\n\t};\n}\n"]}