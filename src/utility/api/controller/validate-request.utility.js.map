{"version":3,"file":"validate-request.utility.js","sourceRoot":"","sources":["validate-request.utility.ts"],"names":[],"mappings":"AAGA,OAAO,EAAE,WAAW,EAAE,MAAM,4BAA4B,CAAC;AAEzD,MAAM,CAAC,KAAK,UAAU,4BAA4B,CAAI,UAAsD,EAAE,UAAuC,EAAE,UAAsD;IAC5M,IAAI,UAAU,EAAE,CAAC;QAChB,KAAK,MAAM,SAAS,IAAI,UAAU,EAAE,CAAC;YACpC,MAAM,MAAM,GAA+B,SAAS,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC;YACpF,MAAM,OAAO,GAAY,MAAM,YAAY,OAAO,CAAC,CAAC,CAAC,MAAM,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC;YAE3E,IAAI,CAAC,OAAO,EAAE,CAAC;gBACd,MAAM,IAAI,SAAS,CAAC,SAAS,CAAC,WAAW,CAAC,EAAE,MAAM,EAAE,UAAU,CAAC,MAAM,EAAE,IAAI,EAAE,SAAS,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;YACtG,CAAC;QACF,CAAC;IACF,CAAC;AACF,CAAC","sourcesContent":["import type { IApiControllerProperties, IApiRequestValidator } from \"../../../interface\";\nimport type { TApiControllerGetListQuery } from \"../../../type\";\n\nimport { ErrorString } from \"../../error-string.utility\";\n\nexport async function ApiControllerValidateRequest<E>(validators: Array<IApiRequestValidator<E>> | undefined, properties: IApiControllerProperties<E>, parameters: Partial<E> | TApiControllerGetListQuery<E>): Promise<void> {\n\tif (validators) {\n\t\tfor (const validator of validators) {\n\t\t\tconst result: boolean | Promise<boolean> = validator.validationFunction(parameters);\n\t\t\tconst isValid: boolean = result instanceof Promise ? await result : result;\n\n\t\t\tif (!isValid) {\n\t\t\t\tthrow new validator.exception(ErrorString({ entity: properties.entity, type: validator.errorType }));\n\t\t\t}\n\t\t}\n\t}\n}\n"]}