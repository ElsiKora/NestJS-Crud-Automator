{"version":3,"file":"write-method.utility.js","sourceRoot":"","sources":["write-method.utility.ts"],"names":[],"mappings":"AAGA,OAAO,EAAE,cAAc,EAAE,MAAM,+BAA+B,CAAC;AAE/D,OAAO,EAAE,0BAA0B,EAAE,MAAM,2BAA2B,CAAC;AAEvE,MAAM,UAAU,wBAAwB,CAAI,UAAuJ,EAAE,MAA+B,EAAE,MAAqB,EAAE,UAAuC,EAAE,cAA6B;IAClU,MAAM,UAAU,GAAW,0BAA0B,CAAC,MAAM,CAAC,CAAC;IAE9D,IAAI,MAAM,CAAC,UAAU,CAAC,EAAE,CAAC;QACxB,MAAM,cAAc,CAAC,mBAAmB,UAAU,kBAAkB,CAAC,CAAC;IACvE,CAAC;IAED,UAAU,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,UAAU,EAAE,UAAU,EAAE,cAAc,CAAC,CAAC;AACpE,CAAC","sourcesContent":["import type { EApiRouteType } from \"../../../enum\";\nimport type { IApiControllerProperties, IApiEntity } from \"../../../interface\";\n\nimport { ErrorException } from \"../../error-exception.utility\";\n\nimport { ApiControllerGetMethodName } from \"./get-method-name.utility\";\n\nexport function ApiControllerWriteMethod<E>(thisTarget: Record<string, (method: EApiRouteType, methodName: string, properties: IApiControllerProperties<E>, entityMetadata: IApiEntity<E>) => void>, target: Record<string, unknown>, method: EApiRouteType, properties: IApiControllerProperties<E>, entityMetadata: IApiEntity<E>): void {\n\tconst methodName: string = ApiControllerGetMethodName(method);\n\n\tif (target[methodName]) {\n\t\tthrow ErrorException(`Reserved method ${methodName} already defined`);\n\t}\n\n\tthisTarget[method](method, methodName, properties, entityMetadata);\n}\n"]}