{"version":3,"file":"transform-filter.utility.js","sourceRoot":"","sources":["transform-filter.utility.ts"],"names":[],"mappings":"AAKA,OAAO,EAAE,wCAAwC,EAAE,MAAM,sBAAsB,CAAC;AAChF,OAAO,EAAE,wBAAwB,EAAE,MAAM,kBAAkB,CAAC;AAE5D,OAAO,EAAE,sCAAsC,EAAE,MAAM,+BAA+B,CAAC;AAEvF,MAAM,UAAU,mCAAmC,CAAI,KAA0B,EAAE,cAA6B;IAC/G,MAAM,MAAM,GAAwB,EAAE,CAAC;IAEvC,KAAK,MAAM,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC;QAC1C,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC;YAAE,SAAS;QAErC,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,GAAkB,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACvD,MAAM,UAAU,GAAW,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;QAElD,IAAI,UAAU,KAAK,OAAO,IAAI,UAAU,KAAK,QAAQ,EAAE,CAAC;YACvD,MAAM,SAAS,GAAqB,KAAK,CAAC,GAAG,GAAG,YAAY,CAAqB,CAAC;YAElF,MAAM,KAAK,GAAQ,KAAK,CAAC,OAAO,CAAC,CAAC;YAElC,IAAI,CAAC,SAAS,IAAI,CAAC,GAAG,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,IAAI;gBAAE,SAAS;YAE1E,MAAM,MAAM,GAAoC,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,MAA2B,EAAE,EAAE,CAAC,MAAM,CAAC,IAAI,IAAI,GAAG,CAAC,CAAC;YAIjI,IAAI,MAAM,IAAI,MAAM,CAAC,QAAQ,CAAC,wCAAwC,CAAC,sBAAsB,CAAC,CAAC,IAAI,KAAK,wBAAwB,CAAC,QAAQ,EAAE,CAAC;gBAE3I,MAAM,CAAC,GAAc,CAAC,GAAG,EAAE,EAAE,EAAE,sCAAsC,CAAC,SAAS,EAAE,KAAK,CAAC,EAAE,CAAC;YAC3F,CAAC;iBAAM,CAAC;gBAEP,MAAM,CAAC,GAAc,CAAC,GAAG,sCAAsC,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;YACnF,CAAC;QACF,CAAC;IACF,CAAC;IAED,OAAO,MAAM,CAAC;AACf,CAAC","sourcesContent":["import type { FindOptionsWhere } from \"typeorm/index\";\n\nimport type { EFilterOperation } from \"../../../../enum/filter-operation.enum\";\nimport type { IApiEntity, IApiEntityColumn } from \"../../../../interface\";\n\nimport { PROPERTY_DESCRIBE_DECORATOR_API_CONSTANT } from \"../../../../constant\";\nimport { EApiPropertyDescribeType } from \"../../../../enum\";\n\nimport { ApiControllerGetListTransformOperation } from \"./transform-operation.utility\";\n\nexport function ApiControllerGetListTransformFilter<E>(query: Record<string, any>, entityMetadata: IApiEntity<E>): FindOptionsWhere<E> {\n\tconst filter: FindOptionsWhere<E> = {};\n\n\tfor (const fullKey of Object.keys(query)) {\n\t\tif (!fullKey.includes(\"[\")) continue;\n\n\t\tconst [key, field]: Array<string> = fullKey.split(\"[\");\n\t\tconst cleanField: string = field.replace(\"]\", \"\");\n\n\t\tif (cleanField === \"value\" || cleanField === \"values\") {\n\t\t\tconst operation: EFilterOperation = query[`${key}[operator]`] as EFilterOperation;\n\t\t\t// eslint-disable-next-line @elsikora/typescript/no-unsafe-assignment\n\t\t\tconst value: any = query[fullKey];\n\n\t\t\tif (!operation || !key || value === undefined || value === null) continue;\n\n\t\t\tconst column: IApiEntityColumn<E> | undefined = entityMetadata.columns.find((column: IApiEntityColumn<E>) => column.name == key);\n\n\t\t\t// @ts-ignore\n\t\t\t// eslint-disable-next-line @elsikora/typescript/no-unsafe-member-access\n\t\t\tif (column && column.metadata[PROPERTY_DESCRIBE_DECORATOR_API_CONSTANT.METADATA_PROPERTY_NAME].type === EApiPropertyDescribeType.RELATION) {\n\t\t\t\t// @ts-ignore\n\t\t\t\tfilter[key as keyof E] = { id: ApiControllerGetListTransformOperation(operation, value) };\n\t\t\t} else {\n\t\t\t\t// @ts-ignore\n\t\t\t\tfilter[key as keyof E] = ApiControllerGetListTransformOperation(operation, value);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn filter;\n}\n"]}