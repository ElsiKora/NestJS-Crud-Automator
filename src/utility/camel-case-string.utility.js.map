{"version":3,"file":"camel-case-string.utility.js","sourceRoot":"","sources":["camel-case-string.utility.ts"],"names":[],"mappings":"AAAA,MAAM,UAAU,eAAe,CAAC,MAAc;IAC7C,MAAM,cAAc,GAA2B;QAC9C,OAAO,EAAE,SAAS;QAClB,aAAa,EAAE,eAAe;KAC9B,CAAC;IAEF,MAAM,WAAW,GAAW,MAAM,CAAC,UAAU,CAAC,cAAc,EAAE,GAAG,CAAC,CAAC;IACnE,MAAM,KAAK,GAAkB,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAEpD,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;QACxB,MAAM,IAAI,GAAW,KAAK,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;QAE5C,IAAI,cAAc,CAAC,IAAI,CAAC,EAAE,CAAC;YAC1B,OAAO,cAAc,CAAC,IAAI,CAAC,CAAC;QAC7B,CAAC;QAED,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IACrD,CAAC;IAED,OAAO,KAAK;SACV,GAAG,CAAC,CAAC,IAAY,EAAE,EAAE;QACrB,IAAI,CAAC,IAAI;YAAE,OAAO,EAAE,CAAC;QAErB,MAAM,SAAS,GAAW,IAAI,CAAC,WAAW,EAAE,CAAC;QAE7C,IAAI,cAAc,CAAC,SAAS,CAAC,EAAE,CAAC;YAC/B,OAAO,cAAc,CAAC,SAAS,CAAC,CAAC;QAClC,CAAC;QAED,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC;SACD,IAAI,CAAC,EAAE,CAAC,CAAC;AACZ,CAAC","sourcesContent":["export function CamelCaseString(string: string): string {\n\tconst knownCompounds: Record<string, string> = {\n\t\tgetlist: \"GetList\",\n\t\tpartialupdate: \"PartialUpdate\",\n\t};\n\n\tconst cleanString: string = string.replaceAll(/[^a-z0-9]+/gi, \" \");\n\tconst words: Array<string> = cleanString.split(\" \");\n\n\tif (words.length === 1) {\n\t\tconst word: string = words[0].toLowerCase();\n\n\t\tif (knownCompounds[word]) {\n\t\t\treturn knownCompounds[word];\n\t\t}\n\n\t\treturn word.charAt(0).toUpperCase() + word.slice(1);\n\t}\n\n\treturn words\n\t\t.map((word: string) => {\n\t\t\tif (!word) return \"\";\n\n\t\t\tconst lowerWord: string = word.toLowerCase();\n\n\t\t\tif (knownCompounds[lowerWord]) {\n\t\t\t\treturn knownCompounds[lowerWord];\n\t\t\t}\n\n\t\t\treturn word.charAt(0).toUpperCase() + lowerWord.slice(1);\n\t\t})\n\t\t.join(\"\");\n}\n"]}