{"version":3,"file":"build-decorator.utility.js","sourceRoot":"","sources":["build-decorator.utility.ts"],"names":[],"mappings":"AAOA,OAAO,EAAE,WAAW,EAAE,wBAAwB,EAAE,aAAa,EAAE,MAAM,YAAY,CAAC;AAElF,OAAO,EAAE,oBAAoB,EAAE,MAAM,8BAA8B,CAAC;AACpE,OAAO,EAAE,qBAAqB,EAAE,MAAM,gCAAgC,CAAC;AACvE,OAAO,EAAE,qBAAqB,EAAE,MAAM,gCAAgC,CAAC;AACvE,OAAO,EAAE,4BAA4B,EAAE,MAAM,yCAAyC,CAAC;AAGvF,MAAM,UAAU,iBAAiB,CAAoD,MAAS,EAAE,gBAAgD,EAAE,MAAqB,EAAE,OAAU,EAAE,YAAoB,EAAE,YAA+B;IAKzO,MAAM,UAAU,GAA2C,gBAAgB,CAAC,UAAU,EAAE,CAAC,MAAM,CAA2C,CAAC;IAE3I,IAAI,UAAU,EAAE,CAAC,OAAO,CAAC,EAAE,SAAS,KAAK,KAAK,IAAI,CAAC,UAAU,EAAE,CAAC,OAAO,CAAC,EAAE,UAAU,IAAI,UAAU,EAAE,CAAC,OAAO,CAAC,EAAE,QAAQ,KAAK,KAAK,CAAC,EAAE,CAAC;QACpI,OAAO,SAAS,CAAC;IAClB,CAAC;IAED,IAAI,CAAC,4BAA4B,CAAC,MAAM,EAAE,gBAAgB,EAAE,OAAO,EAAE,YAAY,CAAC,EAAE,CAAC;QACpF,OAAO,SAAS,CAAC;IAClB,CAAC;IAED,IAAI,gBAAgB,CAAC,IAAI,KAAK,wBAAwB,CAAC,IAAI,EAAE,CAAC;QAC7D,MAAM,YAAY,GAAuC,gBAAgB,CAAC;QAE1E,IAAI,CAAC,MAAM,KAAK,aAAa,CAAC,MAAM,IAAI,MAAM,KAAK,aAAa,CAAC,cAAc,CAAC,IAAI,OAAO,KAAK,WAAW,CAAC,IAAI,EAAE,CAAC;YAClH,OAAO,SAAS,CAAC;QAClB,CAAC;QAED,IAAI,MAAM,KAAK,aAAa,CAAC,QAAQ,IAAI,OAAO,KAAK,WAAW,CAAC,KAAK,EAAE,CAAC;YACxE,MAAM,cAAc,GAAoE,qBAAqB,CAAC,YAAY,EAAE,YAAY,CAAC,UAAU,CAAC,CAAC;YAErJ,OAAO,cAAc,CAAC,GAAG,CAAC,CAAC,QAAkE,EAAE,EAAE;gBAChG,MAAM,WAAW,GAAmC,EAAE,GAAG,YAAY,EAAE,UAAU,EAAE,QAAQ,CAAC,UAAU,EAAE,CAAC;gBACzG,MAAM,MAAM,GAAsC,qBAAqB,CAAC,MAAM,EAAE,WAAW,EAAE,OAAO,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;gBAErH,OAAO,oBAAoB,CAAC,WAAW,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,YAAY,CAAC,CAAC;YACzF,CAAC,CAAC,CAAC;QACJ,CAAC;IACF,CAAC;IAED,MAAM,MAAM,GAAsC,qBAAqB,CAAC,MAAM,EAAE,gBAAgB,EAAE,OAAO,EAAE,YAAY,CAAC,CAAC;IAEzH,OAAO,CAAC,oBAAoB,CAAC,gBAAgB,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,YAAY,CAAC,CAAC,CAAC;AAChG,CAAC","sourcesContent":["import type { Type } from \"@nestjs/common\";\nimport type { IAuthGuard } from \"@nestjs/passport\";\n\nimport type { EApiPropertyDateIdentifier } from \"../../enum\";\nimport type { IApiEntity } from \"../../interface\";\nimport type { TApiPropertyDescribeDateProperties, TApiPropertyDescribeDtoProperties, TApiPropertyDescribeProperties, TDtoGenerateIsAllowedCombination } from \"../../type\";\n\nimport { EApiDtoType, EApiPropertyDescribeType, EApiRouteType } from \"../../enum\";\n\nimport { DtoGenerateDecorator } from \"./generate-decorator.utility\";\nimport { DtoGetDecoratorConfig } from \"./get-decorator-config.utility\";\nimport { DtoHandleDateProperty } from \"./handle-date-property.utility\";\nimport { DtoIsPropertyExposedForGuard } from \"./is-property-exposed-for-guard.utility\";\n\n// eslint-disable-next-line @elsikora/typescript/no-unnecessary-type-parameters\nexport function DtoBuildDecorator<E, M extends EApiRouteType, D extends EApiDtoType>(method: M, propertyMetadata: TApiPropertyDescribeProperties, entity: IApiEntity<E>, dtoType: D, propertyName: string, currentGuard?: Type<IAuthGuard>): Array<PropertyDecorator> | undefined {\n\ttype TAllowed = TDtoGenerateIsAllowedCombination<M, D>;\n\n\ttype TPropertiesType = TAllowed extends true ? TApiPropertyDescribeDtoProperties : never;\n\n\tconst properties: Record<D, TPropertiesType> | undefined = propertyMetadata.properties?.[method] as Record<D, TPropertiesType> | undefined;\n\n\tif (properties?.[dtoType]?.isEnabled === false || (properties?.[dtoType]?.isResponse && properties?.[dtoType]?.isExpose === false)) {\n\t\treturn undefined;\n\t}\n\n\tif (!DtoIsPropertyExposedForGuard(method, propertyMetadata, dtoType, currentGuard)) {\n\t\treturn undefined;\n\t}\n\n\tif (propertyMetadata.type === EApiPropertyDescribeType.DATE) {\n\t\tconst dateMetadata: TApiPropertyDescribeDateProperties = propertyMetadata;\n\n\t\tif ((method === EApiRouteType.UPDATE || method === EApiRouteType.PARTIAL_UPDATE) && dtoType === EApiDtoType.BODY) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (method === EApiRouteType.GET_LIST && dtoType === EApiDtoType.QUERY) {\n\t\t\tconst dateProperties: Array<{ identifier: EApiPropertyDateIdentifier; name: string }> = DtoHandleDateProperty(propertyName, dateMetadata.identifier);\n\n\t\t\treturn dateProperties.map((property: { identifier: EApiPropertyDateIdentifier; name: string }) => {\n\t\t\t\tconst newMetadata: TApiPropertyDescribeProperties = { ...dateMetadata, identifier: property.identifier };\n\t\t\t\tconst config: TApiPropertyDescribeDtoProperties = DtoGetDecoratorConfig(method, newMetadata, dtoType, property.name);\n\n\t\t\t\treturn DtoGenerateDecorator(newMetadata, entity, config, method, dtoType, propertyName);\n\t\t\t});\n\t\t}\n\t}\n\n\tconst config: TApiPropertyDescribeDtoProperties = DtoGetDecoratorConfig(method, propertyMetadata, dtoType, propertyName);\n\n\treturn [DtoGenerateDecorator(propertyMetadata, entity, config, method, dtoType, propertyName)];\n}\n"]}