{"version":3,"file":"is-property-exposed-for-guard.utility.js","sourceRoot":"","sources":["is-property-exposed-for-guard.utility.ts"],"names":[],"mappings":"AAQA,MAAM,UAAU,4BAA4B,CAAC,MAAqB,EAAE,gBAAgD,EAAE,OAAoB,EAAE,YAA+B;IAC1K,MAAM,UAAU,GAAuE,gBAAgB,CAAC,UAAU,EAAE,CAAC,MAAM,CAAuE,CAAC;IAEnM,IAAI,CAAC,UAAU,EAAE,CAAC,OAAO,CAAC,EAAE,KAAK,IAAI,CAAC,YAAY,EAAE,CAAC;QACpD,OAAO,IAAI,CAAC;IACb,CAAC;IAED,MAAM,EAAE,MAAM,EAAE,SAAS,GAAG,KAAK,EAAE,GAA2C,UAAU,EAAE,CAAC,OAAO,CAAC,EAAE,KAAK,IAAI,EAAE,CAAC;IACjH,MAAM,UAAU,GAA4B,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;IACtF,MAAM,YAAY,GAAY,UAAU,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;IAEhE,OAAO,SAAS,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,YAAY,CAAC;AACjD,CAAC","sourcesContent":["import type { Type } from \"@nestjs/common\";\nimport type { IAuthGuard } from \"@nestjs/passport\";\n\nimport type { EApiDtoType, EApiRouteType } from \"../../enum\";\nimport type { TApiPropertyDescribeProperties } from \"../../type\";\nimport type { TApiPropertyDescribeDtoProperties } from \"../../type\";\nimport type { TApiPropertyDescribeDtoGuardProperties } from \"../../type/decorator/api/property/describe/dto/guard-properties.type\";\n\nexport function DtoIsPropertyExposedForGuard(method: EApiRouteType, propertyMetadata: TApiPropertyDescribeProperties, dtoType: EApiDtoType, currentGuard?: Type<IAuthGuard>): boolean {\n\tconst properties: Record<EApiDtoType, TApiPropertyDescribeDtoProperties> | undefined = propertyMetadata.properties?.[method] as Record<EApiDtoType, TApiPropertyDescribeDtoProperties> | undefined;\n\n\tif (!properties?.[dtoType]?.guard || !currentGuard) {\n\t\treturn true;\n\t}\n\n\tconst { guards, isInverse = false }: TApiPropertyDescribeDtoGuardProperties = properties?.[dtoType]?.guard ?? {};\n\tconst guardArray: Array<Type<IAuthGuard>> = Array.isArray(guards) ? guards : [guards];\n\tconst isGuardMatch: boolean = guardArray.includes(currentGuard);\n\n\treturn isInverse ? !isGuardMatch : isGuardMatch;\n}\n"]}