{"version":3,"file":"correlation-id-response-body.interceptor.js","sourceRoot":"","sources":["correlation-id-response-body.interceptor.ts"],"names":[],"mappings":"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","sourcesContent":["import type { CallHandler, ExecutionContext, NestInterceptor } from \"@nestjs/common\";\nimport type { FastifyRequest } from \"fastify\";\nimport type { Observable } from \"rxjs\";\n\nimport { randomUUID } from \"node:crypto\";\n\nimport { HttpException, HttpStatus, Injectable, InternalServerErrorException } from \"@nestjs/common\";\nimport { ThrottlerException } from \"@nestjs/throttler\";\nimport { catchError } from \"rxjs/operators\";\n\n@Injectable()\nexport class CorrelationIDResponseBodyInterceptor implements NestInterceptor {\n\tintercept(context: ExecutionContext, next: CallHandler): Observable<any> {\n\t\treturn next.handle().pipe(\n\t\t\tcatchError((error: unknown) => {\n\t\t\t\tif (error instanceof ThrottlerException) {\n\t\t\t\t\tconst request: FastifyRequest = context.switchToHttp().getRequest<FastifyRequest>();\n\t\t\t\t\tlet correlationId: string = request.headers[\"x-correlation-id\"] as string;\n\t\t\t\t\tconst errorResponse: object | string = error.getResponse();\n\n\t\t\t\t\tif (correlationId == undefined) {\n\t\t\t\t\t\tcorrelationId = randomUUID();\n\t\t\t\t\t}\n\n\t\t\t\t\tlet customErrorResponse: Record<string, any> = {};\n\t\t\t\t\tcustomErrorResponse.statusCode = HttpStatus.TOO_MANY_REQUESTS;\n\n\t\t\t\t\tif (typeof errorResponse === \"object\" && errorResponse != null) {\n\t\t\t\t\t\tcustomErrorResponse = { ...errorResponse };\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcustomErrorResponse.message = errorResponse;\n\t\t\t\t\t}\n\t\t\t\t\tcustomErrorResponse.error = \"Too Many Requests\";\n\t\t\t\t\tcustomErrorResponse.timestamp = Date.now();\n\t\t\t\t\tcustomErrorResponse.correlationID = correlationId;\n\n\t\t\t\t\tthrow new HttpException(customErrorResponse, error.getStatus());\n\t\t\t\t} else if (error instanceof HttpException) {\n\t\t\t\t\tconst request: FastifyRequest = context.switchToHttp().getRequest<FastifyRequest>();\n\t\t\t\t\tlet correlationId: string = request.headers[\"x-correlation-id\"] as string;\n\t\t\t\t\tconst errorResponse: object | string = error.getResponse();\n\n\t\t\t\t\tif (correlationId == undefined) {\n\t\t\t\t\t\tcorrelationId = randomUUID();\n\t\t\t\t\t}\n\n\t\t\t\t\tlet customErrorResponse: Record<string, any> = {};\n\n\t\t\t\t\tif (typeof errorResponse === \"object\" && errorResponse != null) {\n\t\t\t\t\t\tcustomErrorResponse = { ...errorResponse };\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcustomErrorResponse.message = errorResponse;\n\t\t\t\t\t}\n\t\t\t\t\tcustomErrorResponse.correlationID = correlationId;\n\t\t\t\t\tcustomErrorResponse.timestamp = Date.now();\n\n\t\t\t\t\tthrow new HttpException(customErrorResponse, error.getStatus());\n\t\t\t\t} else {\n\t\t\t\t\tconst request: FastifyRequest = context.switchToHttp().getRequest<FastifyRequest>();\n\t\t\t\t\tlet correlationId: string = request.headers[\"x-correlation-id\"] as string;\n\n\t\t\t\t\tif (correlationId == undefined) {\n\t\t\t\t\t\tcorrelationId = randomUUID();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!(error instanceof Error)) {\n\t\t\t\t\t\terror = new InternalServerErrorException(\"Unknown error\");\n\t\t\t\t\t}\n\n\t\t\t\t\tconst internalError: HttpException | InternalServerErrorException = error as HttpException | InternalServerErrorException;\n\t\t\t\t\tconst errorResponse: string = \"Internal server error\";\n\t\t\t\t\tconst customErrorResponse: Record<string, any> = {};\n\t\t\t\t\tcustomErrorResponse.statusCode = HttpStatus.INTERNAL_SERVER_ERROR;\n\t\t\t\t\tcustomErrorResponse.message = errorResponse;\n\t\t\t\t\tcustomErrorResponse.error = \"Internal server error\";\n\t\t\t\t\tcustomErrorResponse.timestamp = Date.now();\n\t\t\t\t\tcustomErrorResponse.correlationID = correlationId;\n\n\t\t\t\t\tconst status: number = \"getStatus\" in internalError && typeof internalError.getStatus === \"function\" ? internalError.getStatus() : HttpStatus.INTERNAL_SERVER_ERROR;\n\n\t\t\t\t\tthrow new HttpException(customErrorResponse, status);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n}\n"]}