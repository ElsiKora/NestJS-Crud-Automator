{"version":3,"file":"string.decorator.js","sourceRoot":"","sources":["string.decorator.ts"],"names":[],"mappings":"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","sourcesContent":["import type { ApiPropertyOptions } from \"@nestjs/swagger\";\n\nimport type { TApiPropertyStringProperties } from \"../../../type/decorator/api/property/string-properties.type\";\n\nimport { applyDecorators } from \"@nestjs/common\";\nimport { ApiProperty, ApiResponseProperty } from \"@nestjs/swagger\";\nimport { Exclude, Expose, Type } from \"class-transformer\";\nimport { ArrayMaxSize, ArrayMinSize, ArrayNotEmpty, IsArray, IsDate, IsEmail, IsIP, IsLowercase, IsOptional, IsString, IsUppercase, IsUrl, IsUUID, Length, Matches, Validate } from \"class-validator\";\n\nimport { STRING_PROPERTY_API_INTERFACE_CONSTANT } from \"../../../constant\";\nimport { EApiPropertyDataType, EApiPropertyStringType } from \"../../../enum\";\nimport { IsRegularExpression } from \"../../../validator\";\n\nexport function ApiPropertyString(properties: TApiPropertyStringProperties): <Y>(target: object, propertyKey?: string | symbol, descriptor?: TypedPropertyDescriptor<Y>) => void {\n\tvalidateOptions(properties);\n\n\tconst apiPropertyOptions: ApiPropertyOptions = buildApiPropertyOptions(properties);\n\tconst decorators: Array<PropertyDecorator> = buildDecorators(properties, apiPropertyOptions);\n\n\treturn applyDecorators(...decorators);\n}\n\nfunction buildApiPropertyOptions(properties: TApiPropertyStringProperties): ApiPropertyOptions {\n\tconst apiPropertyOptions: ApiPropertyOptions & Record<string, any> = {\n\t\tdescription: `${String(properties.entity.name)} ${properties.description ?? \"\"}`,\n\t\t// eslint-disable-next-line @elsikora/typescript/naming-convention\n\t\tnullable: properties.isNullable,\n\t\ttype: EApiPropertyDataType.STRING,\n\t};\n\n\tapiPropertyOptions.required = properties.isResponse === false || properties.isResponse === undefined ? properties.isRequired : false;\n\n\tif (properties.isArray === true) {\n\t\tapiPropertyOptions.isArray = true;\n\t\tapiPropertyOptions.minItems = properties.minItems;\n\t\tapiPropertyOptions.maxItems = properties.maxItems;\n\t\tapiPropertyOptions.uniqueItems = properties.isUniqueItems;\n\t\tapiPropertyOptions.items = {\n\t\t\tmaxLength: properties.maxLength,\n\t\t\tminLength: properties.minLength,\n\t\t};\n\t\tapiPropertyOptions.example = Array.isArray(properties.exampleValue) ? properties.exampleValue : [properties.exampleValue];\n\t} else {\n\t\tapiPropertyOptions.maxLength = properties.maxLength;\n\t\tapiPropertyOptions.minLength = properties.minLength;\n\t\tapiPropertyOptions.example = properties.exampleValue;\n\t}\n\n\tapiPropertyOptions.format = properties.format;\n\tapiPropertyOptions.pattern = properties.pattern.slice(1, -1);\n\n\treturn apiPropertyOptions;\n}\n\nfunction buildDecorators(properties: TApiPropertyStringProperties, apiPropertyOptions: ApiPropertyOptions): Array<PropertyDecorator> {\n\tconst decorators: Array<PropertyDecorator> = [ApiProperty(apiPropertyOptions)];\n\n\tdecorators.push(...buildResponseDecorators(properties), ...buildRequestDecorators(properties), ...buildFormatDecorators(properties), ...buildStringValidationDecorators(properties));\n\n\treturn decorators;\n}\n\nfunction buildFormatDecorators(properties: TApiPropertyStringProperties): Array<PropertyDecorator> {\n\tconst decorators: Array<PropertyDecorator> = [];\n\tconst isArray: boolean = properties.isArray ?? false;\n\n\tif (properties.isResponse === undefined || !properties.isResponse) {\n\t\tswitch (properties.format) {\n\t\t\tcase EApiPropertyStringType.DATE: {\n\t\t\t\tdecorators.push(\n\t\t\t\t\t// eslint-disable-next-line @elsikora/typescript/naming-convention\n\t\t\t\t\tIsDate({ each: isArray }),\n\t\t\t\t\tType(() => Date),\n\t\t\t\t);\n\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase EApiPropertyStringType.EMAIL: {\n\t\t\t\t// eslint-disable-next-line @elsikora/typescript/naming-convention\n\t\t\t\tdecorators.push(IsEmail({}, { each: isArray }));\n\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase EApiPropertyStringType.IP: {\n\t\t\t\t// eslint-disable-next-line @elsikora/typescript/naming-convention\n\t\t\t\tdecorators.push(IsIP(STRING_PROPERTY_API_INTERFACE_CONSTANT.IP_VERSION, { each: isArray }));\n\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase EApiPropertyStringType.LOWERCASE_STRING: {\n\t\t\t\t// eslint-disable-next-line @elsikora/typescript/naming-convention\n\t\t\t\tdecorators.push(IsString({ each: isArray }), IsLowercase({ each: isArray }));\n\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase EApiPropertyStringType.REGEXP: {\n\t\t\t\tdecorators.push(\n\t\t\t\t\tValidate(IsRegularExpression, {\n\t\t\t\t\t\t// eslint-disable-next-line @elsikora/typescript/naming-convention\n\t\t\t\t\t\teach: isArray,\n\t\t\t\t\t\tmessage: `${String(properties.description)} must be valid regular expression string`,\n\t\t\t\t\t}),\n\t\t\t\t\t// eslint-disable-next-line @elsikora/typescript/naming-convention\n\t\t\t\t\tMatches(new RegExp(properties.pattern.slice(1, -1)), { each: isArray }),\n\t\t\t\t\tType(() => RegExp),\n\t\t\t\t);\n\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase EApiPropertyStringType.STRING: {\n\t\t\t\t// eslint-disable-next-line @elsikora/typescript/naming-convention\n\t\t\t\tdecorators.push(IsString({ each: isArray }));\n\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase EApiPropertyStringType.UPPERCASE_STRING: {\n\t\t\t\t// eslint-disable-next-line @elsikora/typescript/naming-convention\n\t\t\t\tdecorators.push(IsString({ each: isArray }), IsUppercase({ each: isArray }));\n\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase EApiPropertyStringType.URL: {\n\t\t\t\tdecorators.push(\n\t\t\t\t\tIsUrl(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tprotocols: [\"https\", \"http\"],\n\t\t\t\t\t\t\t// eslint-disable-next-line @elsikora/typescript/naming-convention\n\t\t\t\t\t\t\trequire_host: true,\n\t\t\t\t\t\t\t// eslint-disable-next-line @elsikora/typescript/naming-convention\n\t\t\t\t\t\t\trequire_protocol: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t// eslint-disable-next-line @elsikora/typescript/naming-convention\n\t\t\t\t\t\t{ each: isArray },\n\t\t\t\t\t),\n\t\t\t\t);\n\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase EApiPropertyStringType.UUID: {\n\t\t\t\t// eslint-disable-next-line @elsikora/typescript/naming-convention\n\t\t\t\tdecorators.push(IsUUID(\"all\", { each: isArray }));\n\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tdefault: {\n\t\t\t\tthrow new Error(`ApiPropertyString error: Format is not valid for string property: ${String(properties.format)}`);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn decorators;\n}\n\nfunction buildRequestDecorators(properties: TApiPropertyStringProperties): Array<PropertyDecorator> {\n\tconst decorators: Array<PropertyDecorator> = [];\n\n\tif (properties.isResponse === false || properties.isResponse === undefined) {\n\t\tif (!properties.isRequired) {\n\t\t\tdecorators.push(IsOptional());\n\t\t}\n\n\t\tif (properties.isArray === true) {\n\t\t\tdecorators.push(IsArray(), ArrayMinSize(properties.minItems), ArrayMaxSize(properties.maxItems));\n\n\t\t\tif (properties.minItems > 0) {\n\t\t\t\tdecorators.push(ArrayNotEmpty());\n\t\t\t}\n\t\t}\n\t}\n\n\treturn decorators;\n}\n\nfunction buildResponseDecorators(properties: TApiPropertyStringProperties): Array<PropertyDecorator> {\n\tconst decorators: Array<PropertyDecorator> = [];\n\n\tif (properties.isResponse) {\n\t\tdecorators.push(ApiResponseProperty());\n\n\t\tif (properties.isExpose === undefined || properties.isExpose) {\n\t\t\tdecorators.push(Expose());\n\t\t} else {\n\t\t\tdecorators.push(Exclude());\n\t\t}\n\t}\n\n\treturn decorators;\n}\n\nfunction buildStringValidationDecorators(properties: TApiPropertyStringProperties): Array<PropertyDecorator> {\n\tconst decorators: Array<PropertyDecorator> = [];\n\tconst isArray: boolean = properties.isArray ?? false;\n\n\tif (properties.isResponse === false || properties.isResponse === undefined) {\n\t\t// eslint-disable-next-line @elsikora/typescript/naming-convention\n\t\tMatches(new RegExp(properties.pattern.slice(1, -1)), { each: isArray });\n\n\t\t// eslint-disable-next-line @elsikora/typescript/naming-convention\n\t\tLength(properties.minLength, properties.maxLength, { each: isArray });\n\t}\n\n\treturn decorators;\n}\n\nfunction validateOptions(properties: TApiPropertyStringProperties): void {\n\tconst errors: Array<string> = [];\n\n\tif ((!properties.isResponse && (!properties.exampleValue || !properties.pattern)) || (properties.exampleValue && properties.pattern)) {\n\t\tconst matches: null | RegExpMatchArray = /^\\/(.*?)\\/([gimuy]*)$/.exec(properties.pattern);\n\n\t\tif (matches) {\n\t\t\tconst pattern: string = matches[STRING_PROPERTY_API_INTERFACE_CONSTANT.REGEX_PATTERN_INDEX];\n\t\t\tconst flags: string = matches[STRING_PROPERTY_API_INTERFACE_CONSTANT.REGEX_FLAGS_INDEX];\n\n\t\t\tconst regex: RegExp = new RegExp(pattern, flags);\n\n\t\t\tif (Array.isArray(properties.exampleValue)) {\n\t\t\t\tfor (const example of properties.exampleValue) {\n\t\t\t\t\tif (!regex.test(example)) {\n\t\t\t\t\t\terrors.push(\"RegExp 'pattern' does not match example string: \" + example);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (!regex.test(properties.exampleValue)) {\n\t\t\t\terrors.push(\"RegExp 'pattern' does not match 'example' string: \" + properties.exampleValue);\n\t\t\t}\n\t\t} else {\n\t\t\terrors.push(\"Invalid RegExp 'pattern' format: \" + properties.pattern);\n\t\t}\n\t}\n\n\tif (properties.minLength > properties.maxLength) {\n\t\terrors.push(\"'minLength' is greater than 'maxLength'\");\n\t}\n\n\tif (properties.minLength < 0) {\n\t\terrors.push(\"'minLength' is less than 0\");\n\t}\n\n\tif (properties.maxLength < 0) {\n\t\terrors.push(\"'maxLength' is less than 0\");\n\t}\n\n\tif (Array.isArray(properties.exampleValue)) {\n\t\tfor (const example of properties.exampleValue) {\n\t\t\tif (example.length < properties.minLength) {\n\t\t\t\terrors.push(\"Example length is less than 'minLength': \" + example);\n\t\t\t}\n\t\t}\n\t} else if (properties.exampleValue.length < properties.minLength) {\n\t\terrors.push(\"Example length is less than 'minLength': \" + properties.exampleValue);\n\t}\n\n\tif (Array.isArray(properties.exampleValue)) {\n\t\tfor (const example of properties.exampleValue) {\n\t\t\tif (example.length > properties.maxLength) {\n\t\t\t\terrors.push(\"Example length is greater than 'maxLength': \" + example);\n\t\t\t}\n\t\t}\n\t} else if (properties.exampleValue.length > properties.maxLength) {\n\t\terrors.push(\"Example length is greater than 'maxLength': \" + properties.exampleValue);\n\t}\n\n\tif (properties.isArray === true) {\n\t\tif (properties.minItems > properties.maxItems) {\n\t\t\terrors.push(\"'minItems' is greater than 'maxItems'\");\n\t\t}\n\n\t\tif (properties.minItems < 0) {\n\t\t\terrors.push(\"'minItems' is less than 0\");\n\t\t}\n\n\t\tif (properties.maxItems < 0) {\n\t\t\terrors.push(\"'maxItems' is less than 0\");\n\t\t}\n\n\t\tif (properties.isUniqueItems && properties.maxItems <= 1) {\n\t\t\terrors.push(\"'uniqueItems' is true but 'maxItems' is less than or equal to 1\");\n\t\t}\n\t}\n\n\tif (errors.length > 0) {\n\t\tthrow new Error(`ApiPropertyString error: ${errors.join(\"\\n\")}`);\n\t}\n}\n"]}