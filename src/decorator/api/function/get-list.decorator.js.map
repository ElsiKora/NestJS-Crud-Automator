{"version":3,"file":"get-list.decorator.js","sourceRoot":"","sources":["get-list.decorator.ts"],"names":[],"mappings":"AAKA,OAAO,EAAE,aAAa,EAAE,4BAA4B,EAAE,MAAM,gBAAgB,CAAC;AAE7E,OAAO,EAAE,kBAAkB,EAAE,MAAM,eAAe,CAAC;AACnD,OAAO,EAAE,cAAc,EAAE,MAAM,0CAA0C,CAAC;AAC1E,OAAO,EAAE,WAAW,EAAE,MAAM,uCAAuC,CAAC;AAGpE,MAAM,UAAU,kBAAkB,CAA2B,UAAkC;IAC9F,MAAM,EAAE,MAAM,EAAE,GAA2B,UAAU,CAAC;IAEtD,OAAO,UAAU,OAAgB,EAAE,YAAoB,EAAE,UAA8B;QACtF,UAAU,CAAC,KAAK,GAAG,KAAK,WAIvB,UAA4C;YAE5C,MAAM,UAAU,GAAkB,IAAI,CAAC,UAAU,CAAC;YAElD,IAAI,CAAC,UAAU,EAAE,CAAC;gBACjB,MAAM,cAAc,CAAC,6CAA6C,CAAC,CAAC;YACrE,CAAC;YAED,OAAO,QAAQ,CAAI,EAAE,MAAM,EAAE,UAAU,EAAE,UAAU,EAAE,CAAC,CAAC;QACxD,CAAC,CAAC;QAEF,OAAO,UAAU,CAAC;IACnB,CAAC,CAAC;AACH,CAAC;AAED,KAAK,UAAU,QAAQ,CAA2B,OAAiD;IAClG,MAAM,EAAE,MAAM,EAAE,UAAU,EAAE,UAAU,EAAE,GAA6C,OAAO,CAAC;IAE7F,IAAI,CAAC;QACJ,MAAM,CAAC,KAAK,EAAE,UAAU,CAAC,GAAuB,MAAM,UAAU,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;QAE1F,OAAO;YACN,KAAK,EAAE,KAAK,CAAC,MAAM;YAGnB,WAAW,EAAE,KAAK,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,UAAU,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YAC7G,KAAK;YACL,UAAU;YAEV,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC,IAAI,CAAC;SACnD,CAAC;IACH,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QAChB,IAAI,KAAK,YAAY,aAAa,EAAE,CAAC;YACpC,MAAM,KAAK,CAAC;QACb,CAAC;QAED,MAAM,IAAI,4BAA4B,CACrC,WAAW,CAAC;YACX,MAAM,EAAE,MAAM;YACd,IAAI,EAAE,kBAAkB,CAAC,mBAAmB;SAC5C,CAAC,CACF,CAAC;IACH,CAAC;AACF,CAAC","sourcesContent":["import type { Repository } from \"typeorm\";\n\nimport type { IApiBaseEntity, IApiFunctionGetListExecutorProperties, IApiFunctionProperties, IApiGetListResponseResult } from \"../../../interface\";\nimport type { TApiFunctionGetListProperties } from \"../../../type\";\n\nimport { HttpException, InternalServerErrorException } from \"@nestjs/common\";\n\nimport { EErrorStringAction } from \"../../../enum\";\nimport { ErrorException } from \"../../../utility/error-exception.utility\";\nimport { ErrorString } from \"../../../utility/error-string.utility\";\n\n// eslint-disable-next-line @elsikora/typescript/no-unnecessary-type-parameters\nexport function ApiFunctionGetList<E extends IApiBaseEntity>(properties: IApiFunctionProperties) {\n\tconst { entity }: IApiFunctionProperties = properties;\n\n\treturn function (_target: unknown, _propertyKey: string, descriptor: PropertyDescriptor): PropertyDescriptor {\n\t\tdescriptor.value = async function (\n\t\t\tthis: {\n\t\t\t\trepository: Repository<E>;\n\t\t\t},\n\t\t\tproperties: TApiFunctionGetListProperties<E>,\n\t\t): Promise<IApiGetListResponseResult<E>> {\n\t\t\tconst repository: Repository<E> = this.repository;\n\n\t\t\tif (!repository) {\n\t\t\t\tthrow ErrorException(\"Repository is not available in this context\");\n\t\t\t}\n\n\t\t\treturn executor<E>({ entity, properties, repository });\n\t\t};\n\n\t\treturn descriptor;\n\t};\n}\n\nasync function executor<E extends IApiBaseEntity>(options: IApiFunctionGetListExecutorProperties<E>): Promise<IApiGetListResponseResult<E>> {\n\tconst { entity, properties, repository }: IApiFunctionGetListExecutorProperties<E> = options;\n\n\ttry {\n\t\tconst [items, totalCount]: [Array<E>, number] = await repository.findAndCount(properties);\n\n\t\treturn {\n\t\t\tcount: items.length,\n\t\t\t// @ts-ignore\n\t\t\t// eslint-disable-next-line @elsikora/sonar/no-nested-conditional,@elsikora/unicorn/no-nested-ternary\n\t\t\tcurrentPage: items.length === 0 ? 0 : properties.skip ? Math.ceil(properties.skip / properties?.take) + 1 : 1,\n\t\t\titems,\n\t\t\ttotalCount,\n\t\t\t// @ts-ignore\n\t\t\ttotalPages: Math.ceil(totalCount / properties.take),\n\t\t};\n\t} catch (error) {\n\t\tif (error instanceof HttpException) {\n\t\t\tthrow error;\n\t\t}\n\n\t\tthrow new InternalServerErrorException(\n\t\t\tErrorString({\n\t\t\t\tentity: entity,\n\t\t\t\ttype: EErrorStringAction.FETCHING_LIST_ERROR,\n\t\t\t}),\n\t\t);\n\t}\n}\n"]}